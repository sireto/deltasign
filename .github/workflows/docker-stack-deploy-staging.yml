name: Docker Deploy Staging

on:
  workflow_run:
    workflows: ["Docker Image Build"]
    branches: [main,master]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    name: Deploy Docker Images
    runs-on: builder
    steps:
      - name: Set commit status to pending
        uses: actions/github-script@v6
        with:
          script: |
            const sha = context.eventName === 'workflow_dispatch' ? github.context.sha : (context.payload.workflow_run ? context.payload.workflow_run.head_sha : github.context.sha);
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: 'pending',
              description: 'Deployment is running',
              context: 'deploy/master'
            })

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.sha || github.event.workflow_run.head_sha }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install docker-stack
        run: pip install --upgrade docker-stack

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: registry.sireto.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Deploy stack
        run: (echo 'dummy' > .npmtoken) && docker-stack deploy --with-registry-auth deltalender docker-compose-staging.yml
        env:
          DOCKER_HOST: 172.31.0.5:2376
          COMMIT_SHA: ${{ github.event_name == 'workflow_dispatch' && github.sha || github.event.workflow_run.head_sha }}
          #JWT secrets
          JWT_SECRET_KEY : ${{ secrets.JWT_SECRET_KEY }}
          JWT_ALGORITHM : ${{ vars.JWT_ALGORITHM }}
          JWT_ACCESS_TOKEN_EXPIRE_MINUTES : ${{ vars.JWT_ACCESS_TOKEN_EXPIRE_MINUTES }}

          # Database details
          DB_PROVIDER : ${{ vars.STAGING_DB_PROVIDER }}
          DB_HOST : ${{ vars.STAGING_DB_HOST }}
          DB_USER : ${{ vars.STAGING_DB_USER }}
          DB_PASSWORD : ${{ secrets.STAGING_DB_PASSWORD }}
          DB_NAME : ${{ vars.STAGING_DB_NAME }}

          # Email service
          EMAIL_SMTP_SERVER : ${{ vars.EMAIL_SMTP_SERVER }}
          EMAIL_SMTP_PORT : ${{ vars.EMAIL_SMTP_PORT }}
          EMAIL_USERNAME : ${{ vars.EMAIL_USERNAME }}
          EMAIL_PASSWORD : ${{ secrets.EMAIL_PASSWORD }}

          # TOTP
          OTP_VALIDITY : ${{ vars.OTP_VALIDITY }}

          # AWS
          AWS_ENDPOINT_URL : ${{ vars.AWS_ENDPOINT_URL }}
          AWS_ACCESS_KEY : ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY : ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET : ${{ vars.AWS_BUCKET }}


          NETWORK: ${vars.NETWORK}
          KUBER_API_KEY: ${{ secrets.KUBER_API_KEY }}
          BLOCKFROST_PROJECT_ID: ${{ secrets.BLOCKFROST_PROJECT_ID }}
          WALLET_MNEMONIC: ${{ secrets.WALLET_MNEMONIC }}

          
          VIRTUAL_HOST: ${{vars.STAGING_VIRTUAL_HOST}}

      - name: Set commit status to success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const sha = context.eventName === 'workflow_dispatch' ? github.context.sha : (context.payload.workflow_run ? context.payload.workflow_run.head_sha : github.context.sha);
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: 'success',
              description: 'Deployment succeeded',
              context: 'deploy/master'
            })

      - name: Set commit status to failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const sha = context.eventName === 'workflow_dispatch' ? github.context.sha : (context.payload.workflow_run ? context.payload.workflow_run.head_sha : github.context.sha);
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: 'failure',
              description: 'Deployment failed',
              context: 'deploy/master'
            })
